3/28/2024 3:05:13 PM ==> 	A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Data.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.UserId. Line:0	ThrowHelper	POST	

3/28/2024 3:05:25 PM ==> 	A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Data.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.Department.Doctors.UserId. Line:0	ThrowHelper	POST	

3/28/2024 3:21:41 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync	POST	

3/28/2024 3:21:43 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync	POST	

3/28/2024 3:22:34 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:23:22 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:23:26 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:24:15 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:25:18 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:25:54 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:26:01 PM ==> AuthService.cs	Username or password is incorrect! Line:56	<LoginAsync>	POST	

3/28/2024 3:51:49 PM ==> 	The LINQ expression 'DbSet<Schedule>()
    .Where(s => !(s.IsDeleted))
    .Select(s => new DoctorScheduleEventDto{ 
        FullName = s.Doctor.FullName, 
        Id = s.Id, 
        AvatarUrl = s.Doctor.User.AvatarUrl, 
        Speciality = s.Doctor.Speciality, 
        WorkingDay = s.WorkingDay.ToString("yyyy-MM-dd") 
    }
    )
    .GroupBy(s => s.WorkingDay)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information. Line:0		GET	

3/28/2024 3:51:53 PM ==> 	The LINQ expression 'DbSet<Schedule>()
    .Where(s => !(s.IsDeleted))
    .Select(s => new DoctorScheduleEventDto{ 
        FullName = s.Doctor.FullName, 
        Id = s.Id, 
        AvatarUrl = s.Doctor.User.AvatarUrl, 
        Speciality = s.Doctor.Speciality, 
        WorkingDay = s.WorkingDay.ToString("yyyy-MM-dd") 
    }
    )
    .GroupBy(s => s.WorkingDay)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information. Line:0		GET	

3/28/2024 3:53:16 PM ==> 	The LINQ expression 'DbSet<Schedule>()
    .Where(s => !(s.IsDeleted))
    .Select(s => new DoctorScheduleEventDto{ 
        FullName = s.Doctor.FullName, 
        Id = s.Id, 
        AvatarUrl = s.Doctor.User.AvatarUrl, 
        Speciality = s.Doctor.Speciality, 
        WorkingDay = s.WorkingDay.ToString("yyyy-MM-dd") 
    }
    )
    .GroupBy(s => s.WorkingDay)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information. Line:0		GET	f5e5740e-83b4-4943-851f-ac06ba8fdb4b

3/28/2024 3:54:09 PM ==> 	The LINQ expression 'DbSet<Schedule>()
    .Where(s => !(s.IsDeleted))
    .Select(s => new DoctorScheduleEventDto{ 
        FullName = s.Doctor.FullName, 
        Id = s.Id, 
        AvatarUrl = s.Doctor.User.AvatarUrl, 
        Speciality = s.Doctor.Speciality, 
        WorkingDay = s.WorkingDay 
    }
    )
    .GroupBy(s => s.WorkingDay)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information. Line:0		GET	f5e5740e-83b4-4943-851f-ac06ba8fdb4b

